@using System.Globalization
<!DOCTYPE html>
<html lang="@CultureInfo.CurrentCulture.Name">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    @* <meta name="csrf-token" content=""> *@
    <title>@ViewData["Title"] - Testing App</title>
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <link rel="stylesheet" href="~/plugins/fontawesome-free/css/all.min.css">
    <link rel="stylesheet" href="~/plugins/toastr/toastr.min.css">

    @await RenderSectionAsync("Styles", required: false)
    <link rel="stylesheet" href="~/dist/css/adminlte.min.css" asp-append-version="true">
    <link rel="shortcut icon" href="~/dist/img/AdminLTELogo.png" type="image/x-icon">

    <script>
        if (localStorage.getItem('darkMode') === 'enabled') {
            document.documentElement.classList.add('dark-mode');
        }
    </script>
</head>

<body class="hold-transition sidebar-mini">
    <div class="wrapper">
        @await Html.PartialAsync("_Navigation")
        <div class="content-wrapper">
            @RenderBody()
        </div>
        <footer class="main-footer">
            <div class="float-right d-none d-sm-inline">
                Anything you want
            </div>
            <strong>Copyright &copy; 2025 <a href="#">Testing App</a>.</strong> All rights reserved.
        </footer>
    </div>
    <div class="modal fade" id="logoutModal">
        <div class="modal-dialog">
            <form asp-action="Logout" asp-controller="Auth" method="POST" class="row g-3 needs-validation" novalidate>
                <div class="modal-content bg-danger">
                    <div class="modal-header">
                        <h4 class="modal-title">Informasi</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        Ingin Keluar Aplikasi ?
                    </div>
                    <div class="modal-footer justify-content-between">
                        <button type="button" class="btn btn-outline-light" data-dismiss="modal">Batal</button>
                        <button type="submit" class="btn btn-outline-light">Ya, Keluar</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <script src="~/plugins/jquery/jquery.min.js"></script>
    <script src="~/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>

    @await RenderSectionAsync("Scripts", required: false)

    <script src="~/plugins/jquery-knob/jquery.knob.min.js"></script>
    <script src="~/helpers/js/notification-messages.js"></script>
    <script src="~/plugins/toastr/toastr.min.js"></script>
    <script src="~/dist/js/adminlte.min.js" asp-append-version="true"></script>

    <script>
        $(document).ready(function () {
            // Fungsi untuk mengganti ikon sesuai dengan mode
            function updateDarkModeIcon() {
                if ($('body').hasClass('dark-mode')) {
                    $('nav.main-header').removeClass('navbar-white navbar-light').addClass('navbar-dark');
                    $('#darkModeToggle i').removeClass('fa-moon').addClass('fa-sun');
                } else {
                    $('nav.main-header').removeClass('navbar-dark').addClass('navbar-white navbar-light');
                    $('#darkModeToggle i').removeClass('fa-sun').addClass('fa-moon');
                    document.documentElement.classList.remove('dark-mode');
                }
            }
            // Cek status dark mode di localStorage dan terapkan saat halaman dimuat
            if (localStorage.getItem('darkMode') === 'enabled') {
                $('body').addClass('dark-mode');
                $('nav.main-header').removeClass('navbar-white navbar-light').addClass('navbar-dark');
                updateDarkModeIcon(); // Perbarui ikon sesuai status
            }
            // Event listener untuk toggle dark mode
            $('#darkModeToggle').on('click', function () {
                $('body').toggleClass('dark-mode');

                // Simpan status dark mode ke localStorage dan perbarui ikon
                if ($('body').hasClass('dark-mode')) {
                    localStorage.setItem('darkMode', 'enabled');
                } else {
                    localStorage.setItem('darkMode', 'disabled');
                }
                updateDarkModeIcon(); // Perbarui ikon setelah toggle
            });

            loadUnreadNotifications();
        });
    </script>
    <script>
        const type = '@TempData["TypeMessage"]';
        const message = '@TempData["ValueMessage"]';

        if (message) {
            notificationMessages(type, message);
        }
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/hubs/notification")
            .build();

        connection.on("ReceiveNotification", function (data) {
            @* console.log(`Data Notif ${JSON.stringify(data)}`); *@
                let count = parseInt($("#notifCountNavbar").text() || "0", 10);
            @* console.log(`Notif: ${count}`); *@
                $("#notifCountNavbar").text(count + 1);

            let list = document.getElementById("notification-list");

            @* let itemData = `<a href="${data.fileUrl}" class="dropdown-item text-wrap">
                <i class="${data.icon} mr-2"></i> ${data.message}
                <span class="float-right text-muted text-sm">${data.time}</span>
            </a><div class="dropdown-divider"></div>`; *@

            if (data.fileUrl) {
                linkDownload = `<a href="${data.fileUrl || '#'}" class="nav-link text-success">Download</a>`;
            }
            let itemData = `<span class="dropdown-item d-flex align-items-start text-wrap" data-id="0">
                    <div class="w-100">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="font-weight-normal">
                                ${data.message}
                            </div>
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted d-block">${linkDownload}</small>
                            <small class="text-muted d-block text-right">${data.time}</small>
                        </div
                    </div>
                </span><div class="dropdown-divider"></div>`;

            $("#notification-list").prepend(itemData)
        });

        connection.start()
            .then(function () {
                console.log("SignalR Connected!");
            })
            .catch(function (err) {
                return console.error(err.toString());
            });

        function deleteNotification(id) {
            // API untuk mark as read
            let dtURL = "@Url.Action("read", "Notification")";
            fetch(dtURL, {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                },
                body: "id=" + encodeURIComponent(id)
            })
                .then(res => {
                    if (res.ok) {
                        console.log("Notification marked as read");
                    }
                });
        }

        function loadUnreadNotifications() {
            let dtURL = "@Url.Action("unread", "Notification")";
            fetch(dtURL)
                .then(res => res.json())
                .then(data => {
                    $("#notification-list").empty();

                    if (data.length === 0) {
                        $("#notification-list").append(
                            `<span class="dropdown-item text-muted">No new notifications</span>`
                        );
                    }

                    data.forEach(n => {
                        let linkDownload = '';

                        if (n.fileUrl) {
                            linkDownload = `<a href="${n.fileUrl || '#'}" class="nav-link text-success">Download</a>`;
                        }
                        let itemData = `<span class="dropdown-item d-flex align-items-start text-wrap" data-id="${n.id}">
                                <div class="w-100">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="font-weight-normal">
                                            ${n.message}
                                        </div>
                                        <a href="javascript:;" onclick="deleteNotification(${n.id})" class="nav-link text-sm text-danger"><i class="fas fa-trash"></i></a>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted d-block">${linkDownload}</small>
                                        <small class="text-muted d-block text-right">${n.time}</small>
                                    </div
                                </div>
                            </span><div class="dropdown-divider"></div>`;
                        $("#notification-list").append(itemData);
                    });

                    $(".notification-count").text(data.length);
                });
        }
    </script>

</body>

</html>